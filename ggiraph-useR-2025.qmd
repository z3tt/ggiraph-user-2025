---
title: 'Plot Twist'
subtitle: 'Adding Interactivity to the<br>Elegance of {ggplot2} with {ggiraph}'
# author:
#   - name: Tanya Shapiro
#     email: tanya@indievisual.tech
#   - name: C√©dric Scherer
#     email: viz@cedricscherer.com
author: "Tanya Shapiro & C√©dric Scherer<br><span style='color:#99229B;'>useR 2025</span>"
title-slide-attributes:
    data-background-image: img/bg-aurora-interactive.png
    data-background-size: cover
format:
  revealjs:
    theme: src/slides.scss
    footer: ''
    menu: false
    transition: fade
    progress: true
    multiplex: false
    preview-links: true
    scrollable: false
    hide-inactive-cursor: true
    highlight-style: printing
    pause: true
editor: source
knitr:
  opts_chunk:
    dev: "ragg_png"
    retina: 1
    dpi: 300
execute:
  freeze: auto
  cache: true
  echo: true
  fig-width: 9
  fig-height: 5.5
  fig-align: center
---

```{r}
#| label: setup
#| include: false
#| cache: false
library(readr)
library(dplyr)
library(ggplot2)
library(ggiraph)

## fonts for html output
gdtools::register_gfont("Asap")
gdtools::register_gfont("Asap Condensed")
gdtools::register_gfont("Rethink Sans")
gdtools::register_gfont("Piazzolla")
gdtools::register_gfont("Spline Sans")
gdtools::register_gfont("Spline Sans Mono")

gdtools::addGFontHtmlDependency(family = c(
  "Asap", "Asap Condensed", "Rethink Sans", "Piazzolla", "Spline Sans", "Spline Sans Mono"
))

## plot scripts
source(here::here("plots/showcase.R"))
source(here::here("plots/example-css-styling.R"))
source(here::here("plots/example-hover.R"))
source(here::here("plots/example-hover-advanced.R"))
source(here::here("plots/example-combined-plots.R"))


```



------------------------------------------------------------------------

```{=html}

<div class="team-intro">
  
  <div class="team-member">
    <h3 class="member-name">
      <span class="gradient-1">Hi, I'm Tanya</span>
    </h3>

    <img src="img/tanya-circular-logo.png" class="member-photo" alt="Tanya Logo">

    <!--
    <div class="social-icons">
      <a href="mailto:tanya@indievisual.tech" class="social-icon purple">
        <i class="fas fa-envelope"></i>
      </a>
      <a href="www.indievisual.tech" class="social-icon purple">
        <i class="fas fa-globe"></i>
      </a>
      <a href="https://www.linkedin.com/in/shapirotanya/" class="social-icon purple">
        <i class="fab fa-linkedin"></i>
      </a>
      <a href="https://github.com/tashapiro" class="social-icon purple">
        <i class="fab fa-github"></i>
      </a>
    </div>
    -->

    <div class="member-info about">
      <span class="info-period entry">BEFORE</span><br>
        Data Professional with<br>Insurance Background
    </div>

    <div class="member-info about">
      <span class="info-period entry">NOW</span><br>
      Founder, Consultant IndieVisual
    </div>
    
    <div class="small" style="margin-top:40px;">
      <a href="mailto:tanya@indievisual.tech" class="gradient-1">tanya@indievisual.tech</a>
    </div>
  </div>
    
    

  <div class="team-member">
    <h3 class="member-name">
      <span class="gradient-2">Hi, I'm C√©dric</span>
    </h3>

    <img src="img/ced-circular-logo-jungle.png" class="member-photo" alt="Cedric Logo">

    <!--
    <div class="social-icons">
      <a href="mailto:viz@cedricscherer.com" class="social-icon teal">
        <i class="fas fa-envelope"></i>
      </a>
      <a href="https://www.cedricscherer.com/" class="social-icon teal">
        <i class="fas fa-globe"></i>
      </a>
      <a href="https://www.linkedin.com/in/cedscherer" class="social-icon teal">
        <i class="fab fa-linkedin"></i>
      </a>
      <a href="https://github.com/z3tt" class="social-icon teal">
        <i class="fab fa-github"></i>
      </a>
    </div>
    -->

    <div class="member-info about">
      <span class="info-period entry">BEFORE</span><br>
      PhD in Computational Ecology
    </div>

    <div class="member-info about">
      <span class="info-period entry">NOW</span><br>
      Data Visualization<br>Designer, Consultant & Educator
    </div>
    
    <div class="small" style="margin-top:40px;">
      <a href="mailto:viz@cedricscherer.com" class="gradient-2">viz@cedricscherer.com</a>
    </div>
  </div>

</div>

</html>
```



## Why we ‚ù§Ô∏è ggplot2

![](img/ggplot-cake-full.png){fig-alt="Slide comparing ggplot2 to a layered cake." fig-align="center"}

##  {data-menu-title="Why we love ggplot2: Extensions" background-image="img/gghex.png" background-position="center" background-size="100%" background-color="#660068"}

::: footer
[ Explore Packages ‚Üí <a style='color:#E8BEE9;' href='https://exts.ggplot2.tidyverse.org/gallery/'>ggplot2 Extension Gallery</a> + <a style='color:#E8BEE9;' href='https://github.com/erikgahner/awesome-ggplot2'>Awesome ggplot2 Project</a> ]{style="color:#D3D3D3;"}
:::

::: sr-only
A collection of extension packages for (and built with) ggplot2. A wild mixture of the most popular packages, packages for very specific use cases, packages that provide color palettes, and very experimental stuff.
:::



##  {data-menu-title="Why we love ggplot2: Community" background-image="img/community-allison-horst-x-tidytuesday.png" background-position="center" background-size="55%" background-color="#FFFFFF"}

::: sr-only
An illustration by Allison Horst: A person in a cape that reads ‚Äúcode hero‚Äù who looks like they are flying through the air while typing on a computer while saying ‚ÄúI‚Äôm doing a think all on my own!‚Äù The coder‚Äôs arms and legs have ropes attached to two hot air balloons lifting them up, with labels on the balloons including ‚Äúteachers‚Äù, ‚Äúbloggers‚Äù, ‚Äúfriends‚Äù, ‚Äúdevelopers‚Äù. Below the code hero, several people carry a trampoline with labels ‚Äúsupport‚Äù and ‚Äúcommunity‚Äù that will catch them if they fall.
:::

::: footer
Illustration by [Allison Horst](https://allisonhorst.com/allison-horst)
:::



## {.center}

:::: {style="text-align:center;"}
Static plots <b class="simple-highlight-3">tell</b> a story.

::: fragment
Interactive plots invite people to <b class="simple-highlight-1">explore</b> the story!
:::
::::

<br><br><br>



------------------------------------------------------------------------

```{r}
#| label: bikes-showcase
#| echo: false
#| fig-align: center
girafe(
  ggobj = p_ggiraph_css, width_svg = 9, height_svg = 5.5,
  options = list(
    opts_tooltip(
      use_fill = TRUE, offx = 18, offy = -35,
      css = "font-size:16pt;font-weight:500;padding:12px;font-family:asap condensed;"
    ),
    opts_hover(
      css = "opacity:1;stroke-width:3px;r:5px;transition:all 0.2s ease;"
    ),
    opts_hover_inv(css = "opacity:0.3;")
    )
  )
```




## Where To Start?

![Goldilocks trying to find the right fit for interactive viz](img/goldilocks-meme.png){fig-align="center"}



## The ggiraph Philosophy

::::: columns

::: {.column width="40%"}
![Hadey Wickham](img/hadley-bust.png){fig-alt="Hadley Wickham"}
<!--
<figure style="display:flex;flex-direction:column;justify-content:center;align-items:center;">

<img src="img/hadley-bust.png" alt="Hadley Wickham" style="width:90%"/>

<span style="color:grey;font-size:1.2rem;font-family:piazzolla !important;">Hadley Wickham, Father of ggplot2</span>

</figure>
-->
:::

::: {.column width="60%" style="margin-top:15%;"}
<p class="quoted">
  If you know ggplot2...<br>you already know ggiraph
</p>
<p style="color: #505050;font-size: 1.4rem; font-family: piazzolla !important; line-height: 1.1;">
  Plausible quote from Hadley Wickham,<br>Father of ggplot2
</p>
:::
:::::



##  50 interactive `ggiraph` geoms!

Consistent naming convention to match ggplot2 geoms

| ggplot2      |     | ggiraph                  |
|--------------|-----|--------------------------|
| `geom_point` | ‚û°Ô∏è  | `geom_point_interactive` |
| `geom_text`  | ‚û°Ô∏è  | `geom_text_interactive`  |
| `geom_line`  | ‚û°Ô∏è  | `geom_line_interactive`  |
| `geom_tile`  | ‚û°Ô∏è  | `geom_tile_interactive`  |

::: {.fragment style="margin: 50px 0 0 2.5em;"}
Export result directly as <b class="simple-highlight-1">HTML widgets</b> ‚Äî<br>or use with Quarto, R Markdown, or Shiny üôå
:::



# Examples: Tooltips



## Setting up Tooltips

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "1-7|2,3,5|9-18|12-15"

p <- ggplot(simpsons_imdb, aes(x = episode, y = season, fill = rating)) +
  geom_tile_interactive(
    aes(tooltip = title, data_id = id), 
    color = "white", stroke = .2
  ) +
  geomtextpath::geom_texthline(...) +
  ...

girafe(
  ggobj = p,
  options = list(
    opts_tooltip(
      opacity = 1, use_fill = TRUE,
      css = "color: black; padding: 15px;"
    ),
    opts_hover(css = "stroke-width: 1;"),
    opts_hover_inv(css = "opacity: 0.3;")
  )
)
```



------------------------------------------------------------------------

```{r}
#| label: heatmap-simpsons-simple
#| echo: false
#| fig-align: center

girafe(
  ggobj = p_simpsons,
  width_svg = 10.8, height_svg = 8.5,
  options = list(
    opts_tooltip(
      opacity = 1, use_fill = TRUE,
      css = "color: black; padding: 15px;"
    ),
    opts_sizing(width = .8),
    opts_hover(css = "stroke-width: 1;"),
    opts_hover_inv(css = "opacity: 0.3;")
  )
)
```



------------------------------------------------------------------------

```{r}
#| label: heatmap-simpsons-advanced
#| echo: false
#| fig-align: center

girafe(
  ggobj = p_simpsons_advanced,
  width_svg = 10.8, height_svg = 8.5,
  options = list(
    opts_tooltip(
      opacity = 1, use_fill = TRUE,
      css = "color: black; padding: 15px;"
    ),
    opts_sizing(width = .8),
    opts_hover(css = "stroke-width: 1;"),
    opts_hover_inv(css = "opacity: 0.3;")
  )
)
```



## Create More Advanced Tooltips

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2-12|6-11|15|21-30"

p <- 
  simpsons_imdb |> 
  mutate(
    title_wrapped = stringr::str_replace_all(stringr::str_wrap(title, 22), "\\n", "<br>"),
    text_color = if_else(rating > 6.3 & rating < 8.5, "black", "white"),
    tooltip_text = paste0(
      "<span style='font-family:rethink sans;color:", text_color, ";'>", 
      "S", sprintf("%02d", season), " E", sprintf("%02d", episode), "<br>",
      "<b style='font-size:150%;font-weight:600;font-family:piazzolla;'>", 
      title_wrapped, "</b><br><br>", "
      IMDb Rating: ", sprintf("%1.1f", rating))
  ) |> 
  ggplot(aes(x = episode, y = season, fill = rating)) +
  geom_tile_interactive(
    aes(tooltip = tooltip_text, data_id = id), 
    color = "white", stroke = .2
  ) +
  geomtextpath::geom_texthline(...) +
  ...

girafe(
  ggobj = p,
  options = list(
    opts_tooltip(
      opacity = 1, use_fill = TRUE,
      css = "color: black; padding: 15px;"
    ),
    opts_hover(css = "stroke-width: 1;"),
    opts_hover_inv(css = "opacity: 0.3;")
  )
)
```



# Example: Hovering



##  {background-color="black"}

```{r}
#| label: doctor-who-basic
#| echo: false
#| fig-align: center


 ggiraph::girafe(
   ggobj = doctor_who_basic_plot,
   width_svg = 6.125, height_svg = 4.5,
   options = list(
      ggiraph::opts_toolbar(saveaspng = F),
      ggiraph::opts_sizing(width = .8),
      ggiraph::opts_tooltip(css = "font-family:Roboto;"),
      ggiraph::opts_hover(css = "stroke:white;cursor:help;")
      )
   )
```



## Basic Hover Effects

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "3-12|157,158"


doctor_who_basic_plot<-ggplot() +
   #interactive points per episode
   ggiraph::geom_jitter_interactive(
     data = df_eps,
     position = position_jitter(seed = 42, height = .2, width =3),
     mapping = aes(
       data_id = story_number,
       x = rating,
       y = reorder(doctor, avg_rating),
       fill = I(color),
       tooltip = tooltip
     ),
     shape = 21,
     color = "black",
     size = 3,
     alpha = 0.8
   ) +
   geomtextpath::geom_textvline(
     mapping = aes(
       xintercept = overall_avg,
       label = paste0("Overall Avg: ", round(overall_avg, 0))
     ),
     size = 3,
     color = pal_line,
     hjust = 0.86,
     vjust = -.2,
     family = "Roboto"
   ) +
   geom_segment(
     data = df_doc_avg,
     mapping = aes(
       x = avg_rating,
       xend = overall_avg,
       y = doctor,
       yend = doctor
     ),
     color = pal_line
   ) +
   geom_point(
     data = df_doc_avg,
     mapping = aes(x = avg_rating, y = doctor, fill = I(color)),
     shape = 21, 
     color = "white",
     size = 10
   ) +
   geom_image(
     data = df_doc_avg,
     mapping = aes(x = avg_rating, y = doctor, image = image),
     size = 0.06,
     asp = 1.61
   ) +
   geom_text(
     data = df_doc_avg,
     mapping = aes(
       x = avg_rating,
       y = doctor,
       label = round(avg_rating, 1)
     ),
     size = 2.5,
     fontface= "bold",
     color = "white",
     vjust = 3.75,
     family = "Roboto"
   ) +
   geom_textbox(
     data = df_doc_avg,
     mapping = aes(x = 59.1, y = doctor, label = label),
     family = "Roboto",
     fill = NA,
     box.size = NA,
     box.padding = unit(rep(0, 4), "pt"),
     color = pal_text,
     hjust = 0
   ) +
   #arrows
   annotate(
     geom = "text",
     label = "Avg Rating\nper Doctor",
     x = 76,
     y = 2.5,
     size = 2.5,
     color = "white",
     family = "Roboto"
   ) +
   geom_curve(
     mapping = aes(
       x = 77,
       xend = 81.4,
       y = 2.7,
       yend = 3
     ),
     color = "white",
     curvature = -0.2,
     linewidth = 0.3,
     arrow = arrow(length = unit(0.08, "in"))
   ) +
   geom_curve(
     mapping = aes(
       x = 77,
       xend = 80.8,
       y = 2.3,
       yend = 2
     ),
     color = "white",
     curvature = 0.2,
     linewidth = 0.3,
     arrow = arrow(length = unit(0.08, "in"))
   ) +
   scale_x_continuous(
     limits = c(59, 95),
     expand = c(0, 0),
     breaks = c(70, 75, 80, 85, 90, 95)
   ) +
   coord_equal(ratio = 50 / 12) +
   labs(
     title = "Doctor Who was The Best?",
     subtitle = "Ratings by Episode and Doctor for the popular TV series, Doctor Who.",
     x = "Rating"
   )+
   theme(
     legend.position = "none",
     plot.background = element_rect(fill = pal_bg, color = pal_bg),
     panel.background = element_blank(),
     panel.grid = element_blank(),
     plot.margin = margin(
       l = 20,
       r = 40,
       b = 10,
       t = 20
     ),
     plot.caption = element_text(size = 7, color = "grey80"),
     plot.title = element_text(
       size = 14,
       face = "bold",
       margin = margin(b = 5)
     ),
     plot.subtitle  = element_text(size = 9, color = "#BABABA"),
     text = element_text(color = pal_text, family = "Roboto"),
     axis.text = element_text(color = pal_text, family = "Roboto Mono"),
     axis.text.y = element_blank(),
     axis.title.y = element_blank(),
     axis.title.x = element_textbox_simple(
       margin = margin(t = 10),
       halign = 0.675,
       hjust = 0.5
     ),
     axis.ticks = element_blank()
   )
 


 ggiraph::girafe(
   ggobj = doctor_who_basic_plot,
   options = list(
      ggiraph::opts_toolbar(saveaspng = F),
      ggiraph::opts_tooltip(css = "font-family:Roboto;"),
      #modify hover css
      ggiraph::opts_hover(css = "fill:white;stroke:grey;cursor:help;")
      )
   )
```



##  {background-color="black"}

```{r}
#| label: doctor-who-advanced
#| echo: false
#| fig-align: center


 ggiraph::girafe(
   ggobj = doctor_who_advanced_plot,
   width_svg = 6.125, height_svg = 4.5,
   options = list(
     #turnoff download png
    ggiraph::opts_toolbar(saveaspng = F),
    ggiraph::opts_sizing(width = .8),
    #default tooltip font
    ggiraph::opts_tooltip(
      css = "font-family:Roboto;"
    ),
    #remove default opts_hover settings
    ggiraph::opts_hover(
      girafe_css(
        css = ""
      )
    ),
    #inverted hover, color points grey
    ggiraph::opts_hover_inv(
      girafe_css(
        css = "", 
        point = "fill:#515151",
        text = NULL
      )
      )
   )
 )
```



## Advanced Hover Effects

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "13-20"


ggiraph::girafe(
   ggobj = doctor_who_advanced_plot,
   width_svg = 6.125, height_svg = 4.5,
   options = list(
     #turnoff download png
    ggiraph::opts_toolbar(saveaspng = F),
    ggiraph::opts_sizing(width = .8),
    #default tooltip font
    ggiraph::opts_tooltip(
      css = "font-family:Roboto;"
    ),
    #remove default opts_hover settings
    ggiraph::opts_hover(css=""),
    #inverted hover, use girafe_css for more control on hover elements
    ggiraph::opts_hover_inv(
      girafe_css(
        css = "", 
        point = "fill:#515151",
        text = NULL
      )
      )
   )
 )

```



# ...a creative use case with ggiraph hover<br><br>üëÄ{background-color="#212121" transiton="zoom"}



##  {#slide3-id data-menu-title="advanced-hover-2"}

```{r}
#| label: emissions-plot
#| echo: false
#| fig-align: center


ggiraph::girafe(
  ggobj = emissions_plot,
  width_svg = 8,
  height_svg = 6,
  options = list(
    ggiraph::opts_toolbar(saveaspng = F),
    ggiraph::opts_sizing(width = .9),
    opts_tooltip(css = "font-family:Roboto"),
    opts_hover(
      css = "stroke-opacity:100%;fill-opacity:100%",
      nearest_distance = NULL)
  )
)
   
```



# Example: Combo Plots



## Linking Data Across Plots

<br>

```{r}
#| label: example-combined-plots
#| echo: false
#| fig-align: center
girafe(
  ggobj = combined_owid, width_svg = 12, height_svg = 5.3,
  options = list(
    opts_tooltip(use_fill = TRUE, css = "
font-size: 17px; 
font-weight: 400; 
font-family: Spline Sans; 
color:white; 
padding: 10px; 
border:2px solid white;
border-radius: 5px; 
"), 
    opts_hover(css = "stroke: white; stroke-width: 0.5px; opacity: 1;"),
    opts_hover_inv(css = "opacity: 0.2;"),
    opts_toolbar(position = "bottomright"),
    opts_zoom(min = 1, max = 4)
  )
)
```



## Combo Plot with {patchwork}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "1-5,8-12|15-16"
plot_owid <- ggplot(data = owid_urban, ...) +
  geom_point_interactive(
    aes(tooltip = tooltip, data_id = country, color = continent), 
    shape = 16, alpha = .72
  ) +
  ...

map_owid <- ggplot(data = owid_urban, ...) +
  geom_sf_interactive(
    aes(tooltip = tooltip, data_id = country, fill = continent), 
    color = "transparent", linewidth = .2
  ) 
  ...

combined_owid <- plot_owid + map_owid +
  plot_layout(ncol = 2, widths = c(.4, .6))

girafe(
  ggobj = combined_owid, width_svg = 12, height_svg = 5.3,
  options = list(
    opts_tooltip(use_fill = TRUE, css = "
    font-size: 17px;
    font-weight: 400;
    font-family: Spline Sans;
    color:white;
    padding: 10px;
    border:2px solid white;
    border-radius: 5px;
    "),
    opts_hover(css = "stroke: white; stroke-width: 0.5px; opacity: 1;"),
    opts_hover_inv(css = "opacity: 0.2;"),
    opts_toolbar(position = "bottomright"),
    opts_zoom(min = 1, max = 4)
  )
)

```



# Example: Shiny



------------------------------------------------------------------------

```{=html}
<iframe
  id="ggiraph-shiny"
  title="Shiny App Example"
  width="1000"
  height="800"
  src="https://tshapiro.shinyapps.io/shiny-ggiraph/">
</iframe>
```



## <span style="color: #212121;">Thank you!</span>

### <span class="simple-highlight-2">Want to learn more?</span>

Code Examples üëâ [github.com/z3tt/ggiraph-user-2025](https://github.com/z3tt/ggiraph-user-2025)
ggiraph Book by David Gohel üëâ [rdata.fr/ggiraph-book](https://www.ardata.fr/ggiraph-book/)

### <span class="simple-highlight-3">Fancy a workshop or collaboration?</span>

We are always open for consulting and trainings!

<div style="padding-top: 5px;">
<a href="mailto:tanya@indievisual.tech" class="gradient-1" style="font-weight:700;">
<i class="fas fa-envelope"></i>&nbsp;tanya@indievisual.tech
</a>&ensp;
<a href="mailto:viz@cedricscherer.com" class="gradient-2" style="font-weight:700;">
<i class="fas fa-envelope"></i>&nbsp;viz@cedricscherer.com
</a>
</div>



##  {.center data-menu-title="ggplot2 [un]charted"}

![[ggplot2-uncharted.com](https://www.ggplot2-uncharted.com/)](img/ggplot-uncharted.png){width="87%" fig-align="center" fig-alt="Screenshot of our interactive online course \"ggplot2 [un]charted\""}

::: footer
:::
