---
title: 'Plot Twist'
subtitle: 'Adding Interactivity to the<br>Elegance of <code>ggplot2</code> with <code>ggiraph</code>'
# author:
#   - name: Tanya Shapiro
#     email: tanya@indievisual.tech
#   - name: Cédric Scherer
#     email: viz@cedricscherer.com
author: "Tanya Shapiro & Cédric Scherer<br>useR 2025"
title-slide-attributes:
    data-background-image: img/bg-placeholder.png
    data-background-size: cover
format:
  revealjs:
    theme: src/slides.scss
    footer: ''
    menu: false
    transition: fade
    progress: true
    multiplex: false
    preview-links: true
    scrollable: false
    hide-inactive-cursor: true
    highlight-style: printing
    pause: true
editor: source
knitr:
  opts_chunk:
    dev: "ragg_png"
    retina: 1
    dpi: 300
execute:
  freeze: auto
  cache: false
  echo: true
  fig-width: 9
  fig-height: 5.5
  fig-align: center
  
---

```{r}
#| label: setup
#| include: false
#| cache: false
library(readr)
library(dplyr)
library(ggplot2)
library(ggiraph)

## fonts for html output
gdtools::register_gfont("Asap")
gdtools::register_gfont("Asap Condensed")
gdtools::register_gfont("Rethink Sans")
gdtools::register_gfont("Piazzolla")
gdtools::register_gfont("Spline Sans")
gdtools::register_gfont("Spline Sans Mono")

gdtools::addGFontHtmlDependency(family = c(
  "Asap", "Asap Condensed", "Rethink Sans", "Piazzolla", "Spline Sans", "Spline Sans Mono"
))

## plot scripts
#source(here::here("plots/showcase.R"))
source(here::here("plots/example-css-styling.R"))
source(here::here("plots/doctor-who.R"))
source(here::here("plots/line-graph.R"))
source(here::here("plots/example-combined-plots.R"))


```

------------------------------------------------------------------------

```{=html}

<div class="team-intro">
  
  <div class="team-member">
    <h3 class="member-name">
      <span class="gradient-1">Hi, I'm Tanya</span>
    </h3>

    <img src="img/tanya-circular-logo.png" class="member-photo" alt="Tanya Logo">

    <div class="social-icons">
      <a href="mailto:tanya@indievisual.tech" class="social-icon purple">
        <i class="fas fa-envelope"></i>
      </a>
      <a href="www.indievisual.tech" class="social-icon purple">
        <i class="fas fa-globe"></i>
      </a>
      <a href="https://www.linkedin.com/in/shapirotanya/" class="social-icon purple">
        <i class="fab fa-linkedin"></i>
      </a>
      <a href="https://github.com/tashapiro" class="social-icon purple">
        <i class="fab fa-github"></i>
      </a>
    </div>

    <div class="member-info about">
      <span class="info-period entry">BEFORE</span><br>
        Data Professional with Insurance Background
    </div>

    <div class="member-info about">
      <span class="info-period entry">NOW</span><br>
      Founder, Consultant IndieVisual
    </div>
  </div>

  <div class="team-member">
    <h3 class="member-name">
      <span class="gradient-2">Hi, I'm Cédric</span>
    </h3>

    <img src="img/ced-circular-logo-jungle.png" class="member-photo" alt="Cedric Logo">

    <div class="social-icons">
      <a href="mailto:viz@cedricscherer.com" class="social-icon teal">
        <i class="fas fa-envelope"></i>
      </a>
      <a href="https://www.cedricscherer.com/" class="social-icon teal">
        <i class="fas fa-globe"></i>
      </a>
      <a href="https://www.linkedin.com/in/cedscherer" class="social-icon teal">
        <i class="fab fa-linkedin"></i>
      </a>
      <a href="https://github.com/z3tt" class="social-icon teal">
        <i class="fab fa-github"></i>
      </a>
    </div>

    <div class="member-info about">
      <span class="info-period entry">BEFORE</span><br>
      Computational Ecologist
    </div>

    <div class="member-info about">
      <span class="info-period entry">NOW</span><br>
      Independent professional in data visualization & information design

    </div>
  </div>

</div>

</html>
```

# Some Background

## Why we ❤️ ggplot2

::::: columns
::: {.column width="50%" style="font-size:2rem"}
-   **Grammar of Graphics** - intuitive and powerful
-   **Layered approach** - build plots step by step
-   **Beautiful & customizable** - flexible styling
-   **Extensible ecosystem** - endless possibilities & extensions
-   **Community** - best part, the people! #TidyTuesday
:::

::: {.column width="50%"}
![Illustration by Allison Horst](img/allison-horst-community.png)
:::
:::::

## What is Interactive Data Visualization?

::::: {style="display:flex;flex-direction:column;justify-content:center;height:50%;gap:20px;"}
::: fragment
Static plots tell a story
:::

::: fragment
Interactive plots invites people to [explore]{style="font-style:italic"} the story
:::
:::::

## Use Cases for Interactive Viz

```{=html}
    <style>
        .cards-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 2rem;
            margin-top:2rem;
        }

        .card {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            font-size: 1.5rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            display: flex;
            align-items: center;
        }

        .card-icon {
            font-size: 2rem;
            color: #9b59b6;
            margin-right: 1rem;
        }

        .card-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: #2c3e50;
            margin: 0;
        }

        .card-features {
            list-style: disc;           
            padding-left: 1.5rem;
        }

        .card-features li {
            color: #5a6c7d;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <div class="cards-container">
        <div class="card">
            <div class="card-header">
                <i class="fas fa-search-plus card-icon"></i>
                <h3 class="card-title">Exploration</h3>
            </div>
            <ul class="card-features">
                <li>Hover for details</li>
                <li>Click to filter</li>
                <li>Zoom and pan</li>
            </ul>
        </div>

        <div class="card">
            <div class="card-header">
                <i class="fas fa-tachometer-alt card-icon"></i>
                <h3 class="card-title">Dashboards</h3>
            </div>
            <ul class="card-features">
                <li>Real-time updates</li>
                <li>User-driven analysis</li>
                <li>Multiple linked views</li>
            </ul>
        </div>

        <div class="card">
            <div class="card-header">
                <i class="fas fa-book-open card-icon"></i>
                <h3 class="card-title">Storytelling</h3>
            </div>
            <ul class="card-features">
                <li>Guided narratives</li>
                <li>Progressive disclosure</li>
                <li>Engagement boost</li>
            </ul>
        </div>

        <div class="card">
            <div class="card-header">
                <i class="fas fa-person-chalkboard card-icon"></i>
                <h3 class="card-title">Presentations</h3>
            </div>
            <ul class="card-features">
                <li>Live demonstrations</li>
                <li>Audience participation</li>
                <li>Memorable experiences</li>
            </ul>
        </div>
    </div>
```

## Where to start if you're an R user?

::::: {.columns style="display:flex;"}
::: {.column width="50%" style="padding-right:15px"}
-   Starting something new can feel overwhelming
-   Interactive data viz requires extensive knowledge in Javascript & D3
-   What if we could build from a familiar starting point?
:::

::: {.column width="50%"}
![](img/colbert-overwhelmed.gif){style="height:600px;"}
:::
:::::

## The ggiraph Philosophy

::::: columns
::: {.column width="60%" style="margin-top:8%"}
<p style="font-style:italic;font-weight:bold;">

"If you know ggplot2...you already know ggiraph"

</p>

<p style="color:grey;font-size:1.5rem;">

-Plausible quote from Hadley Wickham

</p>
:::

::: {.column width="40%"}
<figure style="display:flex;flex-direction:column;justify-content:center;align-items:center;">

<img src="img/hadley-bust.png" alt="Hadley Wickham" style="width:90%"/>

<figcaption>Hadley Wickham, Father of ggplot2</figcaption>

</figure>
:::
:::::

## `ggiraph` interactive geoms

**Total of 50 interactive geoms!** Consistent naming convention to match ggplot2 geoms

| ggplot2      |     | ggiraph                  |
|--------------|-----|--------------------------|
| `geom_point` | ➡️  | `geom_point_interactive` |
| `geom_text`  | ➡️  | `geom_text_interactive`  |
| `geom_line`  | ➡️  | `geom_line_interactive`  |
| `geom_tile`  | ➡️  | `geom_tile_interactive`  |

## Why ggiraph?

✅ **Familiar syntax** - Just add `_interactive` to your geoms

✅ **No JavaScript required** - Stay in your R comfort zone

✅ **R universe**- Works with Quarto, Shiny, R Markdown,

✅ **HTML widgets** - Easy to embed and share

✅ **Use with other extensions** - Doesn't interefere with non-interactive geoms

# Examples: Tooltips

------------------------------------------------------------------------

```{r}
#| label: heatmap-simpsons-simple
#| echo: false
#| fig-align: center

girafe(
  ggobj = p_simpsons,
  width_svg = 10.8, height_svg = 9,
  options = list(
    opts_tooltip(
      opacity = 1, use_fill = TRUE,
      css = "color: black; padding: 15px;"
    ),
    opts_sizing(width = .8),
    opts_hover(css = "stroke-width: 2;"),
    opts_hover_inv(css = "opacity: 0.3;")
  )
)
```

## Code - Basic Tooltip

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "3-6|16-18"

p_simpsons <-
  p_simpsons_base +
  geom_tile_interactive(
    aes(tooltip = title, data_id = id), 
    color = "white", stroke = .2
    ) +
  geomtextpath::geom_texthline(
    yintercept = 9.5, linewidth = 1, label = "Season 10 starts", 
    vjust = 1.4, hjust = .995, family = "Rethink Sans", lineheight = .6
  )

girafe(
  ggobj = p_simpsons,
  width_svg = 10.8, height_svg = 9.5,
  options = list(
    opts_tooltip(
      opacity = 1, use_fill = TRUE,
      css = "color: black; padding: 15px;"
    ),
    opts_sizing(width = .7),
    opts_hover(css = "stroke-width: 2;"),
    opts_hover_inv(css = "opacity: 0.3;")
  )
)

```

------------------------------------------------------------------------

```{r}
#| label: heatmap-simpsons-advanced
#| echo: false
#| fig-align: center

girafe(
  ggobj = p_simpsons_advanced,
  width_svg = 10.8, height_svg = 9,
  options = list(
    opts_tooltip(
      opacity = 1, use_fill = TRUE,
      css = "color: black; padding: 15px;"
    ),
    opts_sizing(width = .8),
    opts_hover(css = "stroke-width: 2;"),
    opts_hover_inv(css = "opacity: 0.3;")
  )
)
```

## Code - Advanced Tooltip

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "6-10|14"

p_simpsons_base <-
  simpsons_imdb |> 
  mutate(
    title_wrapped = stringr::str_replace_all(stringr::str_wrap(title, 22), "\\n", "<br>"),
    text_color = if_else(rating > 6.3 & rating < 8.5, "black", "white"),
    lab = paste0("<span style='font-family:rethink sans;color:", text_color, ";'>", "S", 
                 sprintf("%02d", season), " E", sprintf("%02d", episode), 
                 "<br><b style='font-size:150%;font-weight:600;font-family:piazzolla;'>", 
                 title_wrapped, "</b><br><br>IMDb Rating: ", sprintf("%1.1f", rating))
  )

p_simpsons_advanced <-
  p_simpsons_base +
  geom_tile_interactive(aes(tooltip = lab, data_id = id), color = "white", stroke = .2) +
  geomtextpath::geom_texthline(
    yintercept = 9.5, linewidth = 1, label = "Season 10 starts", 
    vjust = 1.4, hjust = .995, family = "Rethink Sans", lineheight = .6
  )

```

## Showstopper Goes Here 

Embed Ced's bike plot here

# Example: Hovering & Highlighting

##  {background-color="black"}

```{r}
#| label: doctor-who-basic
#| echo: false
#| fig-align: center


 ggiraph::girafe(
   ggobj = doctor_who_basic_plot,
   width_svg = 6.125, height_svg = 4.5,
   options = list(
      ggiraph::opts_toolbar(saveaspng = F),
      ggiraph::opts_sizing(width = .8),
      ggiraph::opts_tooltip(css = "font-family:Roboto;"),
      ggiraph::opts_hover(css = "stroke:white;cursor:help;")
      )
   )
```

## Code - Basic Highlight

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "3-12|151-160"


doctor_who_basic_plot<-ggplot() +
   #interactive points per episode
   ggiraph::geom_jitter_interactive(
     data = df_eps,
     position = position_jitter(seed = 42, height = .2, width =3),
     mapping = aes(
       data_id = story_number,
       x = rating,
       y = reorder(doctor, avg_rating),
       fill = I(color),
       tooltip = tooltip
     ),
     shape = 21,
     color = "black",
     size = 3,
     alpha = 0.8
   ) +
   geomtextpath::geom_textvline(
     mapping = aes(
       xintercept = overall_avg,
       label = paste0("Overall Avg: ", round(overall_avg, 0))
     ),
     size = 3,
     color = pal_line,
     hjust = 0.86,
     vjust = -.2,
     family = "Roboto"
   ) +
   geom_segment(
     data = df_doc_avg,
     mapping = aes(
       x = avg_rating,
       xend = overall_avg,
       y = doctor,
       yend = doctor
     ),
     color = pal_line
   ) +
   geom_point(
     data = df_doc_avg,
     mapping = aes(x = avg_rating, y = doctor, fill = I(color)),
     shape = 21, 
     color = "white",
     size = 10
   ) +
   geom_image(
     data = df_doc_avg,
     mapping = aes(x = avg_rating, y = doctor, image = image),
     size = 0.06,
     asp = 1.61
   ) +
   geom_text(
     data = df_doc_avg,
     mapping = aes(
       x = avg_rating,
       y = doctor,
       label = round(avg_rating, 1)
     ),
     size = 2.5,
     fontface= "bold",
     color = "white",
     vjust = 3.75,
     family = "Roboto"
   ) +
   geom_textbox(
     data = df_doc_avg,
     mapping = aes(x = 59.1, y = doctor, label = label),
     family = "Roboto",
     fill = NA,
     box.size = NA,
     box.padding = unit(rep(0, 4), "pt"),
     color = pal_text,
     hjust = 0
   ) +
   #arrows
   annotate(
     geom = "text",
     label = "Avg Rating\nper Doctor",
     x = 76,
     y = 2.5,
     size = 2.5,
     color = "white",
     family = "Roboto"
   ) +
   geom_curve(
     mapping = aes(
       x = 77,
       xend = 81.4,
       y = 2.7,
       yend = 3
     ),
     color = "white",
     curvature = -0.2,
     linewidth = 0.3,
     arrow = arrow(length = unit(0.08, "in"))
   ) +
   geom_curve(
     mapping = aes(
       x = 77,
       xend = 80.8,
       y = 2.3,
       yend = 2
     ),
     color = "white",
     curvature = 0.2,
     linewidth = 0.3,
     arrow = arrow(length = unit(0.08, "in"))
   ) +
   scale_x_continuous(
     limits = c(59, 95),
     expand = c(0, 0),
     breaks = c(70, 75, 80, 85, 90, 95)
   ) +
   coord_equal(ratio = 50 / 12) +
   labs(
     title = "Doctor Who was The Best?",
     subtitle = "Ratings by Episode and Doctor for the popular TV series, Doctor Who.",
     x = "Rating"
   )+
   theme(
     legend.position = "none",
     plot.background = element_rect(fill = pal_bg, color = pal_bg),
     panel.background = element_blank(),
     panel.grid = element_blank(),
     plot.margin = margin(
       l = 20,
       r = 40,
       b = 10,
       t = 20
     ),
     plot.caption = element_text(size = 7, color = "grey80"),
     plot.title = element_text(
       size = 14,
       face = "bold",
       margin = margin(b = 5)
     ),
     plot.subtitle  = element_text(size = 9, color = "#BABABA"),
     text = element_text(color = pal_text, family = "Roboto"),
     axis.text = element_text(color = pal_text, family = "Roboto Mono"),
     axis.text.y = element_blank(),
     axis.title.y = element_blank(),
     axis.title.x = element_textbox_simple(
       margin = margin(t = 10),
       halign = 0.675,
       hjust = 0.5
     ),
     axis.ticks = element_blank()
   )
 


 ggiraph::girafe(
   ggobj = doctor_who_basic_plot,
   options = list(
      ggiraph::opts_toolbar(saveaspng = F),
      ggiraph::opts_tooltip(css = "font-family:Roboto;"),
      #modify hover css
      ggiraph::opts_hover(css = "fill:white;stroke:grey;cursor:help;")
      )
   )
```

##  {background-color="black"}

```{r}
#| label: doctor-who-advanced
#| echo: false
#| fig-align: center


 ggiraph::girafe(
   ggobj = doctor_who_advanced_plot,
   width_svg = 6.125, height_svg = 4.5,
   options = list(
     #turnoff download png
    ggiraph::opts_toolbar(saveaspng = F),
    ggiraph::opts_sizing(width = .8),
    #default tooltip font
    ggiraph::opts_tooltip(
      css = "font-family:Roboto;"
    ),
    #remove default opts_hover settings
    ggiraph::opts_hover(
      girafe_css(
        css = ""
      )
    ),
    #inverted hover, color points grey
    ggiraph::opts_hover_inv(
      girafe_css(
        css = "", 
        point = "fill:#515151",
        text = NULL
      )
      )
   )
 )
```

## Code - Advanced Highlight

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "13-20"


ggiraph::girafe(
   ggobj = doctor_who_advanced_plot,
   width_svg = 6.125, height_svg = 4.5,
   options = list(
     #turnoff download png
    ggiraph::opts_toolbar(saveaspng = F),
    ggiraph::opts_sizing(width = .8),
    #default tooltip font
    ggiraph::opts_tooltip(
      css = "font-family:Roboto;"
    ),
    #remove default opts_hover settings
    ggiraph::opts_hover(css=""),
    #inverted hover, color points grey
    ggiraph::opts_hover_inv(
      girafe_css(
        css = "", 
        point = "fill:#515151",
        text = NULL
      )
      )
   )
 )

```

# ...a creative use case with ggiraph hover

##  {#slide3-id data-menu-title="advanced-hover-2"}

```{r}
#| label: emissions-plot
#| echo: false
#| fig-align: center


ggiraph::girafe(
  ggobj = emissions_plot,
  width_svg = 8,
  height_svg = 6,
  options = list(
    ggiraph::opts_toolbar(saveaspng = F),
    ggiraph::opts_sizing(width = .9),
    opts_tooltip(css = "font-family:Roboto"),
    opts_hover(
      css = "stroke-opacity:100%;fill-opacity:100%",
      nearest_distance = NULL)
  )
)
   
```

# Example: Combo Plots

## Combo Plots

```{r}
#| label: example-combined-plots
#| echo: false
#| fig-align: center
girafe(
  ggobj = combined_owid, width_svg = 12, height_svg = 5.3,
  options = list(
    opts_tooltip(use_fill = TRUE, css = "
font-size: 17px; 
font-weight: 400; 
font-family: Spline Sans; 
color:white; 
padding: 10px; 
border:2px solid white;
border-radius: 5px; 
"), 
    opts_hover(css = "stroke: white; stroke-width: 0.5px; opacity: 1;"),
    opts_hover_inv(css = "opacity: 0.2;"),
    opts_toolbar(position = "bottomright"),
    opts_zoom(min = 1, max = 4)
  )
)
```

## Code - Combo Plot

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "1-4|6"


combined_owid <- plot_owid + map_owid +
  plot_layout(ncol = 2, widths = c(.4, .6)) +
  plot_annotation(theme = theme(plot.margin = margin(12, 12, 12, 12)))

girafe(
  ggobj = combined_owid, width_svg = 12, height_svg = 5.3,
  options = list(
    opts_tooltip(use_fill = TRUE, css = "
    font-size: 17px;
    font-weight: 400;
    font-family: Spline Sans;
    color:white;
    padding: 10px;
    border:2px solid white;
    border-radius: 5px;
    "),
    opts_hover(css = "stroke: white; stroke-width: 0.5px; opacity: 1;"),
    opts_hover_inv(css = "opacity: 0.2;"),
    opts_toolbar(position = "bottomright"),
    opts_zoom(min = 1, max = 4)
  )
)

```

# Example: Shiny 

------------------------------------------------------------------------

```{=html}
<iframe
  id="inlineFrameExample"
  title="Inline Frame Example"
  width="1000"
  height="600"
  src="https://tshapiro.shinyapps.io/pelotanya/">
</iframe>
```

## Thank You!

##  {.center data-menu-title="ggplot2 [un]charted"}

![[ggplot2-uncharted.com](https://www.ggplot2-uncharted.com/)](img/ggplot-uncharted.png){width="87%" fig-align="center" fig-alt="Screenshot of our interactive online course \"ggplot2 [un]charted\""}

::: footer
:::
